// Generated by CoffeeScript 1.3.3
var __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

define(function(require) {
  var DOMLink2d, Link;
  Link = require("./Link");
  return DOMLink2d = (function(_super) {

    __extends(DOMLink2d, _super);

    function DOMLink2d(domElement, x, y, rotation) {
      if (x == null) {
        x = 0;
      }
      if (y == null) {
        y = 0;
      }
      if (rotation == null) {
        rotation = 0;
      }
      domElement instanceof window.HTMLElement || (function() {
        throw "domElement must be an instance of HTMLElement";
      })();
      if (typeof Object.defineProperties === "function") {
        Object.defineProperties(this, {
          x: {
            get: function() {
              return x;
            },
            set: function(value) {
              x = value;
              return this.applyTransform();
            }
          },
          y: {
            get: function() {
              return y;
            },
            set: function(value) {
              y = value;
              return this.applyTransform();
            }
          },
          rotation: {
            get: function() {
              return rotation;
            },
            set: function(value) {
              rotation = value;
              return this.applyTransform();
            }
          },
          domElement: {
            get: function() {
              return domElement;
            },
            set: function(value) {
              return domElement = value;
            }
          }
        });
      }
    }

    DOMLink2d.prototype.applyTransform = function() {
      var d, transform, _i, _len, _ref;
      d = this.domElement;
      _ref = ['transform', "webkitTransform", "mozTransform", "oTransform", "msTransform"];
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        transform = _ref[_i];
        d.style[transform] = "translate(" + this.x + "px," + this.y + "px) rotate(" + this.rotation + "deg)";
      }
    };

    DOMLink2d.prototype.toString = function() {
      return "[object DOMLink2d]";
    };

    return DOMLink2d;

  })(Link);
});
