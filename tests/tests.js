// Generated by CoffeeScript 1.3.3
/*
    Coordinates.js tests with qunit
*/

/* load a script according to its path , then execute a callback
*/

var loadScript, requireloaded;

loadScript = function(scriptPath, callback, options, callbackoptions) {
  var option, s, values, _i, _len,
    _this = this;
  if (options == null) {
    options = {};
  }
  if (callbackoptions == null) {
    callbackoptions = {};
  }
  s = document.createElement("SCRIPT");
  for (values = _i = 0, _len = options.length; _i < _len; values = ++_i) {
    option = options[values];
    s.option = value;
  }
  s.onload = function(e) {
    return callback(e, callbackoptions);
  };
  s.src = scriptPath;
  document.body.appendChild(s);
  return s;
};

/* callback
*/


requireloaded = function(event) {
  console.log("requireloaded", arguments);
  return require(["../src/js/coordinates/coordinates"], function(coordinates) {
    console.log("coordinates loaded", arguments);
    /* helper pour le debugging via console
    */

    window.Coordinates = coordinates;
    test("coordinates is loaded", function() {
      return ok(coordinates !== null, "coordinates is not null");
    });
    /* test de chaque mÃ©thode de chaque classe
    */

    module("coordinates.events.helpers.Event");
    test("coordinates.events.helpers.Event", function() {
      var clonedEvent, e;
      e = new coordinates.events.helpers.Event("xevent");
      ok(e !== null, "Event.constructor");
      ok(e.getEventPhase() === 1, "EventPhase.getEventPhase");
      e.setEventPhase(coordinates.events.helpers.EventPhase.BUBBLING_PHASE);
      ok(e.getEventPhase() === 2, "EventPhase.setEventPhase");
      clonedEvent = e.clone();
      return ok(clonedEvent.type === e.type && clonedEvent.bubbles === e.bubbles, "Event.clone");
    });
    module("coordinates.events.helpers.EventDispatcher");
    return test("coordinates.events.helpers.EventDispatcher", function() {
      var o;
      o = new coordinates.events.helpers.EventDispatcher();
      return ok(o !== null && o instanceof coordinates.events.helpers.EventDispatcher, "EventDispatcher.constructor");
    });
  });
};

loadScript("../src/js/vendor/require.min.js", requireloaded);
