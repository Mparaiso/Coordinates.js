// Generated by CoffeeScript 1.3.3
var __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

define(function(require) {
  var DOMLink2d, Link;
  Link = require("./Link");
  return DOMLink2d = (function(_super) {

    __extends(DOMLink2d, _super);

    function DOMLink2d(domElement) {
      var rotation, x, y;
      x = 0;
      y = 0;
      rotation = 0;
      this.getX = function() {
        return x;
      };
      this.setX = function(v) {
        x = v;
        return this.applyTransform();
      };
      this.getY = function() {
        return y;
      };
      this.setY = function(v) {
        y = v;
        return this.applyTransform();
      };
      this.getRotation = function() {
        return rotation;
      };
      this.setRotation = function(v) {
        rotation = v;
        return this.applyTransform();
      };
      this.getDomElement = function() {
        return domElement;
      };
      this.setDomElement = function(v) {
        domElement = v;
        return this.initTransform();
      };
      this.initTransform();
      /*
                  descriptors = 
                      x:
                          get:->@x
                          set:(value)->@x=value;@applyTransform()
                      y:
                          get:->@y
      */

    }

    DOMLink2d.prototype.initTransform = function() {
      return -{
        applyTransform: function() {
          var d, transform, _i, _len, _ref;
          d = this.getDomElement();
          _ref = ['transform', "webkitTransform", "mozTransform", "oTransform", "msTransform"];
          for (_i = 0, _len = _ref.length; _i < _len; _i++) {
            transform = _ref[_i];
            d.style[transform] = "translate(" + (this.getX()) + "px," + (this.getY()) + "px) rotate(" + (this.getRotation()) + "deg)";
          }
        }
      };
    };

    return DOMLink2d;

  })(Link);
});
