// Generated by CoffeeScript 1.3.3
var __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

define(function(require) {
  var Flickr, ImageUrlCollection, ImageUrlModel;
  require("vendor/backbone-min");
  Flickr = require("app/service/Flickr");
  ImageUrlModel = require("app/model/ImageUrlModel");
  return ImageUrlCollection = (function(_super) {

    __extends(ImageUrlCollection, _super);

    function ImageUrlCollection() {
      return ImageUrlCollection.__super__.constructor.apply(this, arguments);
    }

    ImageUrlCollection.prototype.model = ImageUrlModel;

    ImageUrlCollection.prototype._update = function() {};

    ImageUrlCollection.prototype.initialize = function() {
      this.on("all", this._update, this);
    };

    ImageUrlCollection.prototype.url = function() {
      return Flickr.getFlickApiUrl({
        key: "design",
        quantity: 30
      });
    };

    ImageUrlCollection.prototype.parse = function(raw) {
      return raw.photos.photo;
    };

    return ImageUrlCollection;

  })(Backbone.Collection);
});
