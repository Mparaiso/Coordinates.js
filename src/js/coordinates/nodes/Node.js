// Generated by CoffeeScript 1.3.3
var __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

define(function(require) {
  var BaseClass, Node;
  BaseClass = require("../utils/BaseClass");
  return Node = (function(_super) {

    __extends(Node, _super);

    function Node(link) {
      this.initConfig({
        link: link
      });
    }

    Node.prototype.toObject = function() {
      throw 'Method must be overriden by child class';
    };

    Node.prototype.toString = function() {
      return "[object Node]";
    };

    return Node;

  })(BaseClass);
});
