// Generated by CoffeeScript 1.3.3
var __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

define(function(require) {
  var Node2d, OrderedNode;
  Node2d = require("./Node2d");
  return OrderedNode = (function(_super) {

    __extends(OrderedNode, _super);

    function OrderedNode(link, order, x, y, jitterX, jitterY) {
      if (link == null) {
        link = null;
      }
      if (order == null) {
        order = 0;
      }
      if (x == null) {
        x = 0;
      }
      if (y == null) {
        y = 0;
      }
      if (jitterX == null) {
        jitterX = 0;
      }
      if (jitterY == null) {
        jitterY = 0;
      }
      OrderedNode.__super__.constructor.call(this, link, x, y, jitterX, jitterY);
      this.getOrder = function() {
        return order;
      };
      this.setOrder = function(v) {
        return order = v;
      };
    }

    OrderedNode.prototype.clone = function() {
      return new OrderedNode(this.getLink, this.getOrder(), this.getX(), this.getY, this.getJitterX(), this.getJitterY());
    };

    OrderedNode.prototype.toObject = function() {
      return {
        order: this.getOrder(),
        x: this.getX(),
        y: this.getY(),
        rotation: this.getRotation()
      };
    };

    return OrderedNode;

  })(Node2d);
});
