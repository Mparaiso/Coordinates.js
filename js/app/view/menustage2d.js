// Generated by CoffeeScript 1.3.3
var __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

define(function(require) {
  var MenuStage2d, MenuTemplate;
  require("vendor/backbone-min");
  MenuTemplate = require("app/template/MenuTemplate");
  return MenuStage2d = (function(_super) {

    __extends(MenuStage2d, _super);

    function MenuStage2d() {
      return MenuStage2d.__super__.constructor.apply(this, arguments);
    }

    /* 
        FR : affiche le menu de sélection des différents layouts
    */


    MenuStage2d.prototype.template = _.template(MenuTemplate);

    MenuStage2d.prototype.LAYOUT_CHANGE = "layoutChange";

    MenuStage2d.prototype.MENU_CLICK = "menuClick";

    MenuStage2d.prototype.initialize = function(options) {
      this.collection.on("change", this.render, this);
      this.on(MenuStage2d.prototype.LAYOUT_CHANGE, this.onCurrentLayoutChange, this);
      return this.render();
    };

    MenuStage2d.prototype.events = {
      "click li": "clickMenu"
    };

    MenuStage2d.prototype.clickMenu = function(e) {
      var type;
      type = $(e.currentTarget).attr("data-type");
      return this.trigger(MenuStage2d.prototype.MENU_CLICK, {
        type: type
      });
    };

    MenuStage2d.prototype.onCurrentLayoutChange = function(layout) {
      /* set active if not active
      */

      var selector;
      selector = "li[data-type|=\"" + layout + "\"]";
      $("li", this.$el).removeClass("active");
      return this.$el.find(selector).addClass("active");
    };

    MenuStage2d.prototype.render = function() {
      return this.$el.html(this.template({
        layouts: this.collection.toJSON()
      }));
    };

    return MenuStage2d;

  })(Backbone.View);
});
