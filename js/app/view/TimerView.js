// Generated by CoffeeScript 1.3.3
var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

define(function(require) {
  var TimerModel, TimerView;
  TimerModel = require("app/model/TimerModel");
  return TimerView = (function(_super) {

    __extends(TimerView, _super);

    function TimerView() {
      this.tick = __bind(this.tick, this);
      return TimerView.__super__.constructor.apply(this, arguments);
    }

    /*
                start and stop a timer
    */


    TimerView.prototype.model = TimerModel;

    TimerView.prototype.TIMER_EVENT = "timerEvent";

    TimerView.prototype.initialize = function() {
      return _.bindAll(this.tick);
    };

    TimerView.prototype.tick = function() {
      this.model.set("tick", (this.model.get("tick")) + 1);
      this.model.set("timerId", setTimeout(this.tick, this.model.get("interval")));
      this.trigger(TimerView.prototype.TIMER_EVENT, this.model.toJSON());
      if (this.model.get("debug") === true) {
        console.log("tick", this.model.toJSON());
      }
    };

    TimerView.prototype.start = function() {
      this.model.set("timerId", setTimeout(this.tick, this.model.get("interval")));
      this.model.set("isRunning", true);
    };

    TimerView.prototype.stop = function() {
      clearTimeout(this.model.get("timerId"));
      this.model.set("isRunning", false);
    };

    /*
                // Exemple : 
                m = new app.model.TimerModel()
                m.set("debug",true)
                v = new app.view.TimerView({model:m})
                v.start()
                E = _.extend(
                    { 
                        initialize:function(v){ 
                                v.on("timerEvent",function(){console.log("timer event");});
                            } 
                    }
                ,Backbone.Events)
                E.initialize(v)
    */


    return TimerView;

  })(Backbone.View);
});
