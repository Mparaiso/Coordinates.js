
(function(global){"use strict";var assert=function(predicate,message){message=message||predicate;if(!predicate)
throw"assertion error : "+message;};var coordinate={};coordinate.layouts={};coordinate.layouts.Layout=function(){this._nodes=[];};coordinate.layouts.Layout.prototype={get size(){return this._nodes.length;},get nodes(){return this._nodes;},addNode:function(object,moveToCoordinates){var node={link:object};this._nodes.push(node);return node;},addNodes:function(count){assert(count>0,"count is positive");for(var i=0;i<count;i++){this.addNode();}},getNodeByLink:function(link){return this._nodes.filter(function(n){return n.link===link;})[0];},getNodeIndex:function(node){return this._nodes.indexOf(node);},getNodeByIndex:function(node){return this._nodes.filter(function(n){return n===node;})[0];},getNodeAt:function(index){return this._nodes[index];},linkExists:function(link){return this._nodes.some(function(n){return n.link===link;});},swapNodeLinks:function(nodeTo,nodeFrom){var tmpLink=nodeTo.link;nodeTo.link=nodeForm.link;nodeFrom.link=tmpLink;},removeLinks:function(){this._nodes.forEach(function(node){node.link=null;});},removeLinkAt:function(index){if(this._nodes[index])
this._nodes[index].link=null;},removeNode:function(node){return this._nodes.splice(_this.getNodeIndex(node),1);},removeAllNodes:function(){return this._nodes.splice(0,this._nodes.length);},removeNodeByLink:function(link){return this._nodes.splice(this.getNodeIndex(this.getNodeByLink(link)),1);},addLinkAt:function(link,index){this._nodes[index].link=link;},storeNode:function(node){this._nodes.push(node);},storeNodeAt:function(node,index){assert((index%1)===0,"index is a Integer");this._nodes[index]=node;},getNextAvailableNode:function(){return this._nodes.filter(function(node){return!(node.link);})[0];},clearNodes:function(){this._nodes=[];}};global.coordinate=coordinate;if(module.exports){module.exports=coordinate;}})((this));