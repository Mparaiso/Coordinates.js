// Generated by CoffeeScript 1.3.3
var __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

define(function(require) {
  /*
          app/route/MainRouter
  */

  var Coordinates, ImageView, MainRouter, MenuStage2d, Stage2d;
  ImageView = require("app/view/ImageView");
  Coordinates = require("coordinates/coordinates");
  Stage2d = require("app/view/Stage2d");
  MenuStage2d = require("app/view/MenuStage2d");
  return MainRouter = (function(_super) {

    __extends(MainRouter, _super);

    function MainRouter() {
      return MainRouter.__super__.constructor.apply(this, arguments);
    }

    /* MainRouter
    */


    MainRouter.prototype.routes = {
      "layout2d/:layout": "setCurrentLayout"
    };

    MainRouter.prototype.initialize = function(config) {
      /* obtenir les params
      */
      this.imageUrlCollection = config.imageUrlCollection, this.stage2d = config.stage2d, this.appConfig = config.appConfig, this.layout2dCollection = config.layout2dCollection, this.MenuStage2d = config.MenuStage2d;
      /* ecouter l'évenement reset de @imageUrlCollection
      */

      this.appConfig.on("change:currentLayout", this.currentLayoutChange, this);
      this.stage2d.on(Stage2d.prototype.ADDED_TO_STAGE, this.imageUrlCollectionReset, this);
      return this.imageUrlCollection.fetch();
    };

    MainRouter.prototype.imageUrlCollectionReset = function() {
      /* creer domlinks quand imageUrlCollection est mis à jour
      */
      this.appConfig.set("domLinks", Coordinates.createDom2dLinks(_.pluck(this.stage2d.getImageViews(), "el")));
      this.addDomLinksToLayouts();
      if (!this.appConfig.has("currentLayout")) {
        return this.setCurrentLayout(this.layout2dCollection.first().get("type"));
      } else {
        return this.setCurrentLayout(this.appConfig.get("currentLayout"));
      }
    };

    MainRouter.prototype.addDomLinksToLayouts = function() {
      /* ajouter les domlinks à tout les layouts
      */

      var _this = this;
      this.layout2dCollection.forEach(function(layoutModel) {
        return Coordinates.addLinksTolayout(_this.appConfig.get("domLinks"), layoutModel.get("instance"));
      });
    };

    MainRouter.prototype.setCurrentLayout = function(layout) {
      /* set current layout
      */

      var _ref;
      this.appConfig.set("currentLayout", layout);
      document.title = "" + layout + " - Coordinates";
      this._currentlayout = (_ref = this.layout2dCollection.where({
        type: layout
      })) != null ? _ref[0].get("instance") : void 0;
      this._currentlayout.updateAndRender();
      this.MenuStage2d.trigger(MenuStage2d.prototype.LAYOUT_CHANGE, this.appConfig.get("currentLayout"));
    };

    return MainRouter;

  })(Backbone.Router);
});
