// Generated by CoffeeScript 1.3.3
var __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

define(function(require) {
  var Node, Node2d;
  Node = require("../Node");
  return Node2d = (function(_super) {

    __extends(Node2d, _super);

    function Node2d(link, x, y, jitterX, jitterY) {
      if (link == null) {
        link = null;
      }
      if (x == null) {
        x = 0;
      }
      if (y == null) {
        y = 0;
      }
      if (jitterX == null) {
        jitterX = 0;
      }
      if (jitterY == null) {
        jitterY = 0;
      }
      Node2d.__super__.constructor.call(this, link);
      this.initConfig({
        rotation: 0,
        x: x,
        y: y,
        jitterX: jitterX,
        jitterY: jitterY
      });
    }

    Node2d.prototype.setJitterX = function(value) {
      return this._jitterX = Math.random() * value * (Math.random() > 0.5 ? -1 : 1);
    };

    Node2d.prototype.setJitterY = function(value) {
      return this._jitterY = Math.random() * value * (Math.random() > 0.5 ? -1 : 1);
    };

    Node2d.prototype.clone = function() {
      var n;
      n = new Node2d(this.getLink(), this.getX(), this.getY(), this.getJitterX(), this.getJitterY);
      n.setRotation(this.getRotation());
      return n;
    };

    Node2d.prototype.toObject = function() {
      return {
        x: this.getX(),
        y: this.getY(),
        jitterX: this.getJitterX(),
        jitterY: this.getJitterY(),
        rotation: this.getRotation()
      };
    };

    Node2d.prototype.toString = function() {
      return "[object Node2d]";
    };

    return Node2d;

  })(Node);
});
