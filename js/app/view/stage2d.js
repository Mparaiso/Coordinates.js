// Generated by CoffeeScript 1.3.3
var __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

define(function(require) {
  var ImageView, Stage2d;
  require("vendor/backbone-min");
  ImageView = require("app/view/ImageView");
  return Stage2d = (function(_super) {

    __extends(Stage2d, _super);

    function Stage2d() {
      return Stage2d.__super__.constructor.apply(this, arguments);
    }

    Stage2d.prototype.ADDED_TO_STAGE = "added_to_stage";

    Stage2d.prototype.initialize = function(params) {
      /* ecouter l'évenement reset de @imageUrlCollection
      */
      return this.collection.on("reset", this.imageUrlCollectionReset, this);
    };

    Stage2d.prototype.getImageViews = function() {
      return this._imageViews;
    };

    Stage2d.prototype.setImageViews = function(v) {
      this._imageViews = v;
      return this.render();
    };

    Stage2d.prototype.imageUrlCollectionReset = function() {
      /* creer les images destinées à être affichées
      */
      return this.setImageViews(this.collection.map(function(imageUrl) {
        var imageView;
        imageView = new ImageView({
          el: $("<img>", {
            "class": "thb"
          }),
          model: imageUrl
        });
        imageView.load(imageView.model.get("url"));
        return imageView;
      }));
    };

    Stage2d.prototype.render = function() {
      /* pour chaque ImageView , ajouter le html de l'image view au html du Stage2d
      */
      this.$el.append(_.pluck(this.getImageViews(), "$el"));
      this.trigger(Stage2d.prototype.ADDED_TO_STAGE);
      return this;
    };

    return Stage2d;

  })(Backbone.View);
});
